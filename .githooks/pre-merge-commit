 #!/bin/bash
 
echo "=== Debug ==="
echo "Hook is running from .githooks"
echo "Current branch: $(git rev-parse --abbrev-ref HEAD)"
echo "Merge source: $(git rev-parse --abbrev-ref MERGE_HEAD 2>/dev/null || echo 'none')"
echo "============="

# This script runs automatically when you try to merge branches

# Get the name of the current branch we're on
# git rev-parse --abbrev-ref HEAD returns the short name of the current branch
CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)

# The branch we want to protect with spell checking
# Change this if you want to protect a different branch
TARGET_BRANCH="develop"

# Get the branch we're merging from (source branch)
SOURCE_BRANCH=$(git rev-parse -q --verify MERGE_HEAD || true)

if [ "$CURRENT_BRANCH" == "main" ]; then
    if [ -n "$SOURCE_BRANCH" ]; then
        SOURCE_BRANCH=$(git name-rev --name-only $SOURCE_BRANCH)
        SOURCE_BRANCH=${SOURCE_BRANCH##refs/heads/}
        SOURCE_BRANCH=${SOURCE_BRANCH%%~*}
    fi

    PROTECTED_BRANCH='main'

    if [ "$CURRENT_BRANCH" = "$protected_branch" ]; then
        if [ "$SOURCE_BRANCH" != "$TARGET_BRANCH" ]; then
            echo "ERROR: Merging into $protected_branch is only allowed from $TARGET_BRANCH branch."
            echo "You're trying to merge from: $SOURCE_BRANCH"
            exit 1
        fi
    fi
else 
    # Only run the checks when we're merging into the target branch (develop)
    if [ "$CURRENT_BRANCH" = "$TARGET_BRANCH" ]; then
        echo "Running spell and grammar checks before merge..."
        
        # Get a list of all markdown files that are staged for commit
        # git diff --name-only : List changed files
        # --cached : Look at staged files
        # --diff-filter=ACM : Only look at Added, Changed, or Modified files
        # grep -E '\.(md|mdx|txt)$' : Only look at markdown and text files
        FILES=$(git diff --name-only --cached --diff-filter=ACM | grep -E '\.(md|mdx|txt)$')
        
        # If we found any markdown files to check
        if [ -n "$FILES" ]; then
            # Run spell check using cspell
            # The '!' means "if the command fails"
            # npx ensures we use the project's installed version of cspell
            if ! npx cspell $FILES; then
                echo "❌ Spell check failed! Please fix the spelling errors before merging."
                # Exit with error code 1 to prevent the merge
                exit 1
            fi
            
            # Run grammar check using write-good
            # We run this even if spell check fails
            # '|| true' means the script continues even if write-good finds issues
            echo "Grammar check (warnings):"
            for file in $FILES; do
                npx write-good "$file" || true
            done
            
            # If we got here, spell check passed
            echo "✅ Spell check passed!"
            echo "⚠️  Review any grammar warnings above"
        else
            # No markdown files were changed
            echo "No markdown files to check."
        fi
    fi
fi

# Exit successfully - allow the merge to proceed
exit 0
